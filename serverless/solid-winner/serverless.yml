service:
  name: solid-winner

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  region: ap-northeast-2
  runtime: nodejs8.10
  environment:
    SERVICE_NAME: ${self:service.name}
    SERVERLESS_STAGE: ${opt:stage, self:provider.stage}
    DYNAMODB_LOCAL_PORT: ${env:DYNAMODB_LOCAL_PORT, '8500'}

functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
          method: get
          path: hello
  putUser:
    handler: src/handler.putUser
    events:
      - http:
          method: put
          path: user
  getMap:
    handler: src/handler.getMap
    events:
      - http:
          method: get
          path: map

resources:
  Resources:
    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SERVICE_NAME}-user-${self:provider.environment.SERVERLESS_STAGE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    mapTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SERVICE_NAME}-map-${self:provider.environment.SERVERLESS_STAGE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    structureTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SERVICE_NAME}-structure-${self:provider.environment.SERVERLESS_STAGE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  serverless-offline:
    port: ${env:SERVERLESS_OFFLINE_PORT, '8600'}

  dynamodb:
    start:
      port: ${self:provider.environment.DYNAMODB_LOCAL_PORT}
      migrate: true
